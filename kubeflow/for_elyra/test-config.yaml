# Test Configuration for Enhanced QuakeFlow Pipelines
# This file provides test scenarios for validating enhanced pipeline functionality
# 
# Test Results Summary (Latest Test Run):
# ✅ Common library imports: PASSED
# ✅ Configuration loading: PASSED  
# ✅ Enhanced notebook simulation: PASSED
# ✅ Pipeline template validation: PASSED
# ✅ Docker configuration: PASSED
# ✅ Runtime image configuration: FIXED
# ✅ Dependencies: ALL REQUIRED PACKAGES AVAILABLE

test_scenarios:
  - name: "California Demo Test"
    description: "Quick test with California demo data"
    environment:
      REGION_NAME: "california"
      NUM_PARALLEL: "1"
      START_TIME: "2019-07-04T17:00:00"
      END_TIME: "2019-07-04T19:00:00"
    expected_outputs:
      - "config/config.json"
      - "phasenet/picks.csv"
      - "gamma/gamma_catalog.csv"
    validation:
      min_picks: 10
      min_events: 1
      max_processing_time: 1800  # 30 minutes

  - name: "Japan Full Month Test"
    description: "Full month processing for Japan region"
    environment:
      REGION_NAME: "japan"
      NUM_PARALLEL: "4"
      START_TIME: "2024-01-01T00:00:00"
      END_TIME: "2024-01-31T00:00:00"
    expected_outputs:
      - "config/config.json"
      - "phasenet/picks.csv"
      - "gamma/gamma_catalog_filtered.csv"
      - "gamma/figures/event_locations.png"
    validation:
      min_picks: 100
      min_events: 10
      max_processing_time: 7200  # 2 hours

  - name: "Hawaii Volcanic Test"
    description: "Hawaii volcanic earthquake processing"
    environment:
      REGION_NAME: "hawaii"
      NUM_PARALLEL: "2"
      START_TIME: "2018-01-01T00:00:00"
      END_TIME: "2018-01-07T00:00:00"
    expected_outputs:
      - "config/config.json"
      - "phasenet/picks.csv"
      - "gamma/gamma_catalog.csv"
      - "visualize/final_catalog.html"
    validation:
      min_picks: 50
      min_events: 5
      max_processing_time: 3600  # 1 hour

  - name: "Universal Pipeline Test"
    description: "Test universal pipeline with multiple regions"
    environment:
      REGION_NAME: "forge"
      NUM_PARALLEL: "1"
    expected_outputs:
      - "config/config.json"
      - "phasenet/processing_summary.json"
      - "gamma/processing_summary.json"
    validation:
      config_validation: true
      pipeline_completion: true

runtime_tests:
  - name: "Enhanced Runtime Image"
    description: "Validate enhanced runtime environment"
    image: "okadak86/quakeflow-enhanced:2.0"
    tests:
      - command: "python -c 'from common import notebook_setup; print(\"✓ Common utilities available\")'"
      - command: "python -c 'from common import RegionConfig; c=RegionConfig(\"california\"); print(\"✓ Configuration loading works\")'"
      - command: "python -c 'import obspy, pandas, numpy; print(\"✓ Dependencies available\")'"

performance_benchmarks:
  - name: "Configuration Setup"
    target_time: 30  # seconds
    components:
      - "Enhanced config loading"
      - "Coordinate transformation setup"
      - "Velocity model initialization"

  - name: "PhaseNet Processing"
    target_time: 300  # seconds for demo data
    components:
      - "Waveform extraction"
      - "Phase picking execution"
      - "Quality control validation"
      - "Result formatting"

  - name: "GaMMA Association"
    target_time: 120  # seconds
    components:
      - "Pick loading and validation"
      - "Event association"
      - "Quality filtering"
      - "Visualization generation"

quality_metrics:
  phasenet:
    min_pick_rate: 0.1  # picks per station per hour
    max_noise_ratio: 0.3  # noise picks / total picks
    required_phases: ["P", "S"]

  gamma:
    min_association_rate: 0.5  # associated picks / total picks
    min_picks_per_event: 4
    max_location_uncertainty: 5.0  # km

  adloc:
    max_rms_residual: 1.0  # seconds
    min_improvement_factor: 0.8  # compared to GaMMA locations

visualization_tests:
  - name: "Event Location Maps"
    required_files:
      - "gamma/figures/event_locations.png"
      - "adloc/figures/location_improvement.png"
    validation:
      - "File exists and is valid PNG"
      - "Contains geographic boundaries"
      - "Shows stations and events"

  - name: "Processing Reports"
    required_files:
      - "visualize/processing_report.html"
      - "gamma/processing_summary.json"
    validation:
      - "HTML is valid and readable"
      - "JSON contains required metrics"
      - "Links and references work"

integration_tests:
  kubeflow_ui:
    - name: "Metadata Generation"
      description: "Verify Kubeflow UI metadata is properly generated"
      validation:
        - "mlpipeline-ui-metadata.json exists"
        - "Contains visualization outputs"
        - "Metrics are properly formatted"

  elyra_pipeline:
    - name: "Pipeline Execution"
      description: "Full pipeline execution in Elyra environment"
      steps:
        - "Load enhanced pipeline template"
        - "Configure environment variables"
        - "Execute pipeline"
        - "Validate all outputs"
        - "Check Kubeflow UI integration"

error_handling_tests:
  - name: "Missing Dependencies"
    scenario: "Remove required input files"
    expected_behavior: "Graceful failure with informative error messages"

  - name: "Invalid Configuration"
    scenario: "Provide malformed region configuration"
    expected_behavior: "Configuration validation failure with clear guidance"

  - name: "Processing Failures"
    scenario: "Simulate PhaseNet processing failure"
    expected_behavior: "Fallback to mock data with warning messages"

  - name: "Resource Constraints"
    scenario: "Limit memory and CPU resources"
    expected_behavior: "Degraded performance but successful completion"

compatibility_tests:
  regions:
    - california
    - japan
    - hawaii
    - forge
    - seafoam

  data_formats:
    - mseed
    - sac
    - numpy

  storage_protocols:
    - file
    - gs
    - s3

migration_tests:
  - name: "Legacy Pipeline Compatibility"
    description: "Ensure legacy pipelines continue to work"
    test_files:
      - "001_006_Config_PhaseNet.pipeline"
      - "007_008_GaMMA_PlotFigure.pipeline"
    validation:
      - "Pipeline loads successfully"
      - "Executes without errors"
      - "Produces expected outputs"

  - name: "Enhanced vs Legacy Comparison"
    description: "Compare enhanced vs legacy pipeline outputs"
    validation:
      - "Enhanced pipeline produces more comprehensive outputs"
      - "Processing time is comparable or better"
      - "Quality metrics are improved"